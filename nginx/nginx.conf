worker_processes auto;
worker_rlimit_nofile 100000;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'Backend: $upstream_addr';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # === Upstreams ===
    upstream api_backend {
        server host.docker.internal:5000;
        server host.docker.internal:5001;
        server host.docker.internal:5002;
        server host.docker.internal:5003;
    }

    upstream products_backend {
        server host.docker.internal:5000;
        server host.docker.internal:5001;
        server host.docker.internal:5002;
    }

    upstream stats_backend {
        server host.docker.internal:5002;
        server host.docker.internal:5003;
    }

    server {
        listen 80;

        # === /api/ ===
        location /api/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # === /products ===
        location /products {
            proxy_pass http://products_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # === /stats ===
        location /stats {
            proxy_pass http://stats_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # === Fallback ===
        location / {
            return 404 'Only /api/, /products, and /stats routes are available.';
            add_header Content-Type text/plain;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;
        }

        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
