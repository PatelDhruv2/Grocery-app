worker_processes 1;
worker_rlimit_nofile 100000;

events {
    worker_connections 1024;
}

http {
    # Define the log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'Backend: $upstream_addr';  # This will log the backend server address

    access_log /var/log/nginx/access.log main;  # Use the new log format

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Define the upstream block for load balancing
  upstream backend_servers {
    server host.docker.internal:5000;  # This resolves to your host machine
    server host.docker.internal:5001;
    server host.docker.internal:5002;
    server host.docker.internal:5003;
}


    server {
        listen 80;

        # Proxy requests to the backend servers
        location /api/ {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;
        }

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
    }
}
